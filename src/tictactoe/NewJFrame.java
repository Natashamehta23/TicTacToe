/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;
import javax.swing.*;
/**
 *
 * @author natasha
 */
public class NewJFrame extends javax.swing.JFrame {

    private GamePlay board=new GamePlay();
    public int player=1;
    private JButton[][] button=new JButton[3][3];
    protected void setButtonReferences(){
        button[0][0]=jButton10;
        button[0][1]=jButton2;
        button[0][2]=jButton3;
        button[1][0]=jButton4;
        button[1][1]=jButton5;
        button[1][2]=jButton6;
        button[2][0]=jButton7;
        button[2][1]=jButton8;
        button[2][2]=jButton9;
    }
    public NewJFrame() {
        initComponents();
        setButtonReferences();
    }
    public void setPlayer(int value){
        player=value;
    }
    public void refreshBoard(){
        for(int i=0;i<3;i++)
            for(int j=0;j<3;j++)
                switch(board.getState(i, j)){
                    case 2:
                        button[i][j].setEnabled(true);
                        button[i][j].setText("");
                        break;
                    case 3:
                        button[i][j].setEnabled(false);
                        button[i][j].setText("0");
                        break;
                    case 5:
                        button[i][j].setEnabled(false);
                        button[i][j].setText("X");  
                        break;
                }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
                  
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jColorChooser1 = new javax.swing.JColorChooser();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(204, 0, 0));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(204, 0, 0));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(204, 0, 0));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton6.setForeground(new java.awt.Color(204, 0, 0));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton7.setForeground(new java.awt.Color(204, 0, 0));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 0, 0));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton8.setForeground(new java.awt.Color(204, 0, 0));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton9.setForeground(new java.awt.Color(204, 0, 0));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(0, 0, 0));
        jButton10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton10.setForeground(new java.awt.Color(204, 0, 0));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 204));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Restart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         if(player==1){
            board.changeState(1,0,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(1,0,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         if(player==1){
            board.changeState(1,1,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(1,1,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         if(player==1){
            board.changeState(1,2,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(1,2,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         if(player==1){
            board.changeState(2,0,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(2,0,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         if(player==1){
            board.changeState(2,1,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(2,1,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
         if(player==1){
            board.changeState(2,2,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(2,2,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(player==1){
            board.changeState(0,2,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(0,2,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(player==1){
            board.changeState(0,1,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(0,1,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        if(player==1){
            board.changeState(0,0,3);
            this.refreshBoard();
            if(board.checkWin(1)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
        else{
            board.changeState(0,0,5);
            this.refreshBoard();
            if(board.checkWin(2)){
                JOptionPane.showMessageDialog(this,"You Win!");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else if(board.isBoardFilled()){
                JOptionPane.showMessageDialog(this, "Game Draw");
                board.initializeGame();
                refreshBoard();
                setPlayer(1);
            }
            else{
                setPlayer(3-player);
                playComputer();
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        board.initializeGame();
        refreshBoard();
    }//GEN-LAST:event_jButton1ActionPerformed
    
      /**
     * @param args the command line arguments
     */
    public void playComputer(){
        int buttonNumber;
        buttonNumber=board.win(player);
        if(buttonNumber==0)
            buttonNumber=board.win(3-player);
        if(buttonNumber==0)
            buttonNumber=board.randomButton();
    if(buttonNumber!=0){
        switch(buttonNumber){
            case 1:
                board.changeState(0, 0, player==1?3:5);
                this.refreshBoard();
                break;
            case 2:
                board.changeState(0, 1, player==1?3:5);
                this.refreshBoard();
                break;
            case 3:
                board.changeState(0, 2, player==1?3:5);
                this.refreshBoard();
                break;
            case 4:
                board.changeState(1, 0, player==1?3:5);
                this.refreshBoard();
                break;
            case 5:
                board.changeState(1, 1, player==1?3:5);
                this.refreshBoard();
                break;
            case 6:
                board.changeState(1, 2, player==1?3:5);
                this.refreshBoard();
                break;
            case 7:
                board.changeState(2, 0, player==1?3:5);
                this.refreshBoard();
                break;
            case 8:
                board.changeState(2, 1, player==1?3:5);
                this.refreshBoard();
                break;
            case 9:
                board.changeState(2, 2, player==1?3:5);
                this.refreshBoard();
                break;
        }
        if(board.checkWin(player)){
            JOptionPane.showMessageDialog(this, "Computer won!");
            board.initializeGame();
            this.refreshBoard();
            setPlayer(1);
        }
        else if(board.isBoardFilled()){
            JOptionPane.showMessageDialog(this, "Game draw!");
            board.initializeGame();
            this.refreshBoard();
            setPlayer(1);
        }
        else
            setPlayer(3-player);
    }
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJFrame game=new NewJFrame();
                new NewJFrame().setVisible(true);
                game.board=new GamePlay();
                game.board.initializeGame();
                game.setPlayer(1);
                //game.refreshBoard();
                int test=game.board.getState(1,1);
                System.out.println(test);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
